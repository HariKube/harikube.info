apiVersion: v1
kind: Namespace
metadata:
  name: harikube
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: harikube-db-pvc
  namespace: harikube
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harikube-middleware
  namespace: harikube
  labels:
    app: harikube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harikube
  template:
    metadata:
      labels:
        app: harikube
    spec:
      terminationGracePeriodSeconds: 31536000
      imagePullSecrets:
      - name: harikube-registry-secret
      containers:
      - name: middleware
        image: registry.harikube.info/harikube/middleware:beta-v1.0.0-17
        imagePullPolicy: IfNotPresent
        env:
        - name: TOPOLOGY_CONFIG
          value: secret://harikube/topology-config
        args:
        - --listen-address=0.0.0.0:2379
        - --datastore-max-idle-connections=5
        - --datastore-max-open-connections=90
        - --datastore-connection-max-lifetime=5m
        - --datastore-connection-max-idle-lifetime=5m
        - --endpoint=multi://sqlite:///db/main.db?_journal=WAL&cache=shared
        ports:
        - containerPort: 2379
          name: api-port
        - containerPort: 8080
          name: metrics
        volumeMounts:
        - name: db-storage
          mountPath: /db
        # livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: api-port
        #   initialDelaySeconds: 15
        #   timeoutSeconds: 5
        #   periodSeconds: 20
        #   failureThreshold: 3
        # readinessProbe:
        #   httpGet:
        #     path: /ready
        #     port: api-port
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 3
        #   periodSeconds: 10
        #   failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 0
          runAsUser: 0
        resources:
          limits:
            memory: 4Gi
          requests:
            cpu: 1000m
            memory: 1Gi
      volumes:
      - name: db-storage
        persistentVolumeClaim:
          claimName: harikube-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: harikube-middleware-svc
  namespace: harikube
spec:
  type: ClusterIP 
  selector:
    app: harikube
  ports:
    - name: api
      protocol: TCP
      port: 2379
      targetPort: api-port
---
apiVersion: v1
kind: Service
metadata:
  name: harikube-middleware-metrics
  namespace: harikube
  labels:
    app: harikube
    app.kubernetes.io/component: metrics 
spec:
  type: ClusterIP 
  selector:
    app: harikube
  ports:
    - name: metrics
      protocol: TCP
      port: 8080
      targetPort: metrics
---
---
# Source: vcluster/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vc-harikube
  namespace: harikube
  labels:
    app: vcluster
    chart: "vcluster-0.29.1"
    release: "harikube"
    heritage: "Helm"
---
# Source: vcluster/templates/workload-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vc-workload-harikube
  namespace: harikube
  labels:
    app: vcluster
    chart: "vcluster-0.29.1"
    release: "harikube"
    heritage: "Helm"
---
# Source: vcluster/templates/config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "vc-config-harikube"
  namespace: harikube
  labels:
    app: vcluster
    chart: "vcluster-0.29.1"
    release: "harikube"
    heritage: "Helm"
type: Opaque
data:
  config.yaml: ""
---
# Source: vcluster/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vc-harikube-v-harikube
  labels:
    app: vcluster
    chart: "vcluster-0.29.1"
    release: "harikube"
    heritage: "Helm"
rules:
  
  - apiGroups: [""]
    resources: [ "namespaces" ]
    resourceNames: [ "harikube" ]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: [ "secrets" ]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: [ "secrets" ]
    verbs: ["get"]
    resourceNames: [ "" ]
---
# Source: vcluster/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vc-harikube-v-harikube
  labels:
    app: vcluster
    chart: "vcluster-0.29.1"
    release: "harikube"
    heritage: "Helm"
subjects:
  - kind: ServiceAccount
    name: vc-harikube
    namespace: harikube
roleRef:
  kind: ClusterRole
  name: vc-harikube-v-harikube
  apiGroup: rbac.authorization.k8s.io
---
# Source: vcluster/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vc-harikube
  namespace: harikube
  labels:
    app: vcluster
    chart: "vcluster-0.29.1"
    release: "harikube"
    heritage: "Helm"
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets", "services", "pods", "pods/attach", "pods/portforward", "pods/exec", "persistentvolumeclaims"]
    verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods/status", "pods/ephemeralcontainers"]
    verbs: ["patch", "update"]
  - apiGroups: ["apps"]
    resources: ["statefulsets", "replicasets", "deployments"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["endpoints", "pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [ "" ]
    resources: ["events"]
    verbs: [ "create", "get", "list", "watch" ]
---
# Source: vcluster/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vc-harikube
  namespace: harikube
  labels:
    app: vcluster
    chart: "vcluster-0.29.1"
    release: "harikube"
    heritage: "Helm"
subjects:
  - kind: ServiceAccount
    name: vc-harikube
    namespace: harikube
roleRef:
  kind: Role
  name: vc-harikube
  apiGroup: rbac.authorization.k8s.io
---
# Source: vcluster/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: harikube-headless
  namespace: harikube
  labels:
    app: vcluster
    chart: "vcluster-0.29.1"
    release: "harikube"
    heritage: "Helm"
spec:
  publishNotReadyAddresses: true
  ports:
    - name: https
      port: 443
      targetPort: 8443
      protocol: TCP
  clusterIP: None
  selector:
    app: vcluster
    release: "harikube"
---
# Source: vcluster/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: harikube
  namespace: harikube
  labels:
    app: vcluster
    chart: "vcluster-0.29.1"
    release: "harikube"
    heritage: "Helm"
    vcluster.loft.sh/service: "true"
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: 8443
      nodePort: 0
      protocol: TCP
    - name: kubelet
      port: 10250
      targetPort: 8443
      nodePort: 0
      protocol: TCP
  selector:
    app: vcluster
    release: harikube
---
# Source: vcluster/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: harikube
  namespace: harikube
  labels:
    app: vcluster
    chart: "vcluster-0.29.1"
    release: harikube
    heritage: "Helm"
spec:
  selector:
    matchLabels:
      app: vcluster
      release: "harikube"
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
  serviceName: harikube-headless
  podManagementPolicy: Parallel
  
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 5Gi
  replicas: 1
  template:
    metadata:
      annotations:
        vClusterConfigHash: "4e3115a03244973aa79cc2f5284d150bf5561ebb61e0f5e8b1edea8461c8a026"
      labels:
        app: vcluster
        release: harikube
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: vc-harikube
      volumes:        
        - name: helm-cache
          emptyDir: {}
        - emptyDir: {}
          name: binaries
        - name: tmp
          emptyDir: {}
        - name: certs
          emptyDir: {}
        - name: vcluster-config
          secret:
            secretName: vc-config-harikube
      initContainers:
        
        - name: kubernetes
          image: "quay.io/harikube/kubernetes:v1.34.1"
          volumeMounts:
            - mountPath: /binaries
              name: binaries
          command:
            - cp
          args:
            - -r 
            - /kubernetes/.
            - /binaries/
          imagePullPolicy: IfNotPresent
          securityContext:
            {}
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 40m
              memory: 64Mi
      enableServiceLinks: true
      containers:
        - name: syncer
          image: "ghcr.io/loft-sh/vcluster-pro:0.29.1"
          imagePullPolicy: 
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 2
            timeoutSeconds: 3
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 2
            timeoutSeconds: 3
            failureThreshold: 60
          startupProbe:
            httpGet:
              path: /readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 6
            timeoutSeconds: 3
            failureThreshold: 300
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 0
            runAsUser: 0
          resources:
            limits:
              ephemeral-storage: 8Gi
              memory: 2Gi
            requests:
              cpu: 200m
              ephemeral-storage: 1Gi
              memory: 256Mi
          env:
            - name: VCLUSTER_NAME
              value: "harikube"
            - name: LOFT_LOG_ENCODING
              value: console
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            
          volumeMounts:            
            - name: data
              mountPath: /data
            - name: binaries
              mountPath: /binaries
            - name: certs
              mountPath: /pki
            - name: helm-cache
              mountPath: /.cache/helm
            - name: vcluster-config
              mountPath: /var/lib/vcluster
            - name: tmp
              mountPath: /tmp
