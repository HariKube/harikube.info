apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
    control-plane: controller-manager
    metrics: enabled
    webhooks: enabled
  name: harikube
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: topologyconfigs.harikube.info
spec:
  group: harikube.info
  names:
    kind: TopologyConfig
    listKind: TopologyConfigList
    plural: topologyconfigs
    singular: topologyconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.deployStatus
      name: DeployStatus
      type: string
    - jsonPath: .spec.targetSecret
      name: TargetSecret
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: TopologyConfig is the Schema for the topologyconfigs API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TopologyConfigSpec defines the desired state of TopologyConfig.
            properties:
              backends:
                description: Backends represents the group of topology configs.
                items:
                  properties:
                    backendTLS:
                      description: BackendTLS defines TLS configuration for connection.
                      properties:
                        caFile:
                          description: CAFile is the CA file for the secure connection.
                          type: string
                        certFile:
                          description: CertFile is the certificate file for the secure
                            connection.
                          type: string
                        keyFile:
                          description: KeyFile is the key file for the secure connection.
                          type: string
                        skipVerify:
                          description: SkipVerify skips TLS verification
                          type: boolean
                      type: object
                    compactBatchSize:
                      description: CompactBatchSize is the number of records to delete
                        in each batch during compaction.
                      format: int64
                      maximum: 10000
                      minimum: 10
                      type: integer
                    compactInterval:
                      description: CompactInterval is the interval to run compaction.
                      format: duration
                      type: string
                    compactIntervalJitter:
                      description: CompactIntervalJitter is the jitter to add to the
                        compaction interval.
                      maximum: 1000
                      minimum: 0
                      type: integer
                    compactMinRetain:
                      description: CompactMinRetain is the minimum number of revisions
                        to retain during compaction.
                      format: int64
                      maximum: 10000
                      minimum: 10
                      type: integer
                    compactTimeout:
                      description: CompactTimeout is the timeout for the compaction
                        operation.
                      format: duration
                      type: string
                    connectionPool:
                      description: ConnectionPool defines connection pool configuration
                        for connection.
                      properties:
                        maxIdle:
                          minimum: 0
                          type: integer
                        maxIdleLifeTime:
                          format: duration
                          type: string
                        maxLifeTime:
                          format: duration
                          type: string
                        maxOpen:
                          minimum: 0
                          type: integer
                      type: object
                    customresource:
                      description: CustomResource defines custom resource based routing.
                      properties:
                        group:
                          description: Group is the API group to match.
                          type: string
                        kind:
                          description: Kind is the API kind to match.
                          type: string
                      type: object
                    endpoint:
                      description: Endpoint is database specific connection string.
                      type: string
                    name:
                      description: Name is the global unique name of the config.
                      type: string
                    namespace:
                      description: Namespace defines namespace routing.
                      properties:
                        kinds:
                          description: Kinds is list of kind to match.
                          items:
                            type: string
                          type: array
                        namespace:
                          description: Namespace is the name of namespace to match.
                          type: string
                      type: object
                    prefix:
                      description: Prefix defines prefix based routing.
                      properties:
                        prefix:
                          description: Prefix is the ETCD key prefix to match.
                          type: string
                      type: object
                    regexp:
                      description: RegExp defines regexp based routing.
                      properties:
                        key:
                          description: Key is the regexp to match if individual operation
                            needs different match.
                          type: string
                        prefix:
                          description: Prefix is the regexp to match.
                          type: string
                      type: object
                  required:
                  - endpoint
                  - name
                  type: object
                minItems: 1
                type: array
              targetSecret:
                default: harikube/topology-config
                description: TargetSecret defines the namespaced name of the generated
                  topology config.
                type: string
            required:
            - backends
            - targetSecret
            type: object
          status:
            description: TopologyConfigStatus defines the observed state of TopologyConfig.
            properties:
              deployOrder:
                description: DeployOrder defines the order of config.
                format: int64
                type: integer
              deployStatus:
                default: Pending
                description: DeployStatus defines the in cluster state of config.
                type: string
              deployStatusReason:
                description: DeployStatus stores the reason of DeployStatus.
                type: string
            type: object
        type: object
    selectableFields:
    - jsonPath: .spec.targetSecret
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-controller-manager
  namespace: harikube
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-leader-election-role
  namespace: harikube
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/finalizers
  verbs:
  - update
- apiGroups:
  - harikube.info
  resources:
  - topologyconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - harikube.info
  resources:
  - topologyconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - harikube.info
  resources:
  - topologyconfigs/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: operator-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-topologyconfig-admin-role
rules:
- apiGroups:
  - harikube.info
  resources:
  - topologyconfigs
  verbs:
  - '*'
- apiGroups:
  - harikube.info
  resources:
  - topologyconfigs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-topologyconfig-editor-role
rules:
- apiGroups:
  - harikube.info
  resources:
  - topologyconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - harikube.info
  resources:
  - topologyconfigs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-topologyconfig-viewer-role
rules:
- apiGroups:
  - harikube.info
  resources:
  - topologyconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - harikube.info
  resources:
  - topologyconfigs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-leader-election-rolebinding
  namespace: harikube
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: operator-controller-manager
  namespace: harikube
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator-manager-role
subjects:
- kind: ServiceAccount
  name: operator-controller-manager
  namespace: harikube
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: operator-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: operator-controller-manager
  namespace: harikube
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
    control-plane: controller-manager
  name: operator-controller-manager-metrics-service
  namespace: harikube
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: operator
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-webhook-service
  namespace: harikube
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: operator
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
    control-plane: controller-manager
  name: operator-controller-manager
  namespace: harikube
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: operator
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/name: operator
        control-plane: controller-manager
    spec:
      imagePullSecrets:
      - name: harikube-registry-secret
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        command:
        - /manager
        image: registry.harikube.info/harikube/operator:beta-v1.0.0-2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-certs
          readOnly: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: webhook-certs
        secret:
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-metrics-certs
  namespace: harikube
spec:
  dnsNames:
  - operator-controller-manager-metrics-service.harikube.svc
  - operator-controller-manager-metrics-service.harikube.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: operator-selfsigned-issuer
  secretName: metrics-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-serving-cert
  namespace: harikube
spec:
  dnsNames:
  - operator-webhook-service.harikube.svc
  - operator-webhook-service.harikube.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-selfsigned-issuer
  namespace: harikube
spec:
  selfSigned: {}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
    control-plane: controller-manager
  name: operator-controller-manager-metrics-monitor
  namespace: harikube
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      ca:
        secret:
          key: ca.crt
          name: metrics-server-cert
      cert:
        secret:
          key: tls.crt
          name: metrics-server-cert
      insecureSkipVerify: false
      keySecret:
        key: tls.key
        name: metrics-server-cert
      serverName: operator-controller-manager-metrics-service.harikube.svc
  selector:
    matchLabels:
      app.kubernetes.io/name: operator
      control-plane: controller-manager
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-allow-metrics-traffic
  namespace: harikube
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          metrics: enabled
    ports:
    - port: 8443
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: operator
      control-plane: controller-manager
  policyTypes:
  - Ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: operator
  name: operator-allow-webhook-traffic
  namespace: harikube
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          webhook: enabled
    ports:
    - port: 443
      protocol: TCP
  podSelector:
    matchLabels:
      app.kubernetes.io/name: operator
      control-plane: controller-manager
  policyTypes:
  - Ingress
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: harikube/operator-serving-cert
  name: operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: operator-webhook-service
      namespace: harikube
      path: /validate-harikube-info-v1-topologyconfig
  failurePolicy: Fail
  name: vtopologyconfig-v1.kb.io
  rules:
  - apiGroups:
    - harikube.info
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - topologyconfigs
  sideEffects: None